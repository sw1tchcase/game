package shaders
import sg "shared:sokol/gfx"
import "core:math/linalg"
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i src/shaders/terrain.glsl -o src/shaders/terrain.odin -l glsl430 -f sokol_odin

    Overview:
    =========
    Shader program: 'terrain':
        Get shader desc: terrain_shader_desc(sg.query_backend())
        Vertex shader: terrain_vs
            Attributes:
                ATTR_terrain_vs_position => 0
            Uniform block 'terrain_vs_params':
                Odin struct: Terrain_Vs_Params
                Bind slot: SLOT_terrain_vs_params => 0
        Fragment shader: terrain_fs
*/
ATTR_terrain_vs_position :: 0
SLOT_terrain_vs_params :: 0
Terrain_Vs_Params :: struct #align(16) {
    using _: struct #packed {
        mvp: linalg.Matrix4f32,
    },
}
/*
    #version 430

    uniform vec4 terrain_vs_params[4];
    layout(location = 0) in vec2 position;

    void main()
    {
        gl_Position = mat4(terrain_vs_params[0], terrain_vs_params[1], terrain_vs_params[2], terrain_vs_params[3]) * vec4(position.x + float(gl_InstanceID % 8), 0.0, position.y + float(gl_InstanceID / 8), 1.0);
    }

*/
@(private)
terrain_vs_source_glsl430 := [314]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x74,0x65,0x72,0x72,0x61,
    0x69,0x6e,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x74,0x65,
    0x72,0x72,0x61,0x69,0x6e,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2c,0x20,0x74,0x65,0x72,0x72,0x61,0x69,0x6e,0x5f,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x74,0x65,0x72,0x72,0x61,0x69,
    0x6e,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,
    0x74,0x65,0x72,0x72,0x61,0x69,0x6e,0x5f,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x20,0x25,0x20,
    0x38,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x2e,0x79,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x67,0x6c,0x5f,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x20,0x2f,0x20,0x38,0x29,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    #version 430

    layout(location = 0) out vec4 frag_color;

    void main()
    {
        frag_color = vec4(0.20000000298023223876953125, 0.800000011920928955078125, 0.4000000059604644775390625, 1.0);
    }

*/
@(private)
terrain_fs_source_glsl430 := [190]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x32,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,
    0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x34,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x35,0x39,0x36,0x30,0x34,0x36,0x34,0x34,0x37,0x37,0x35,0x33,0x39,0x30,0x36,
    0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
terrain_shader_desc :: proc (backend: sg.Backend) -> sg.Shader_Desc {
    desc: sg.Shader_Desc
    desc.label = "terrain_shader"
    #partial switch backend {
    case .GLCORE:
        desc.attrs[0].name = "position"
        desc.vs.source = transmute(cstring)&terrain_vs_source_glsl430
        desc.vs.entry = "main"
        desc.vs.uniform_blocks[0].size = 64
        desc.vs.uniform_blocks[0].layout = .STD140
        desc.vs.uniform_blocks[0].uniforms[0].name = "terrain_vs_params"
        desc.vs.uniform_blocks[0].uniforms[0].type = .FLOAT4
        desc.vs.uniform_blocks[0].uniforms[0].array_count = 4
        desc.fs.source = transmute(cstring)&terrain_fs_source_glsl430
        desc.fs.entry = "main"
    }
    return desc
}
